@echo off
echo üöÄ D√©marrage de la migration des donn√©es MongoDB
echo ===============================================

REM Variables de configuration
set LOCAL_MONGO_URI=mongodb://localhost:27017
set DOCKER_MONGO_URI=mongodb://admin:password123@localhost:27017
set BACKUP_DIR=mongo_backup

REM Cr√©er le r√©pertoire de sauvegarde
if not exist %BACKUP_DIR% mkdir %BACKUP_DIR%

echo üì§ Export des donn√©es depuis MongoDB local...

REM Export des collections depuis la base locale
docker run --rm -v %cd%\%BACKUP_DIR%:/backup --network host mongo:7-jammy mongodump --uri="%LOCAL_MONGO_URI%/dune" --out=/backup

if %ERRORLEVEL% EQU 0 (
    echo ‚úÖ Export r√©ussi depuis MongoDB local
) else (
    echo ‚ùå Erreur lors de l'export depuis MongoDB local
    exit /b 1
)

echo üì• Import des donn√©es vers MongoDB Docker...

REM Import vers la base Docker
docker run --rm -v %cd%\%BACKUP_DIR%:/backup --network host mongo:7-jammy mongorestore --uri="%DOCKER_MONGO_URI%/dune" --drop /backup/dune

if %ERRORLEVEL% EQU 0 (
    echo ‚úÖ Import r√©ussi vers MongoDB Docker
) else (
    echo ‚ùå Erreur lors de l'import vers MongoDB Docker
    exit /b 1
)

echo üîç V√©rification des donn√©es import√©es...

REM V√©rifier le nombre de documents dans chaque collection
echo Collections dans MongoDB Docker apr√®s import:
docker exec dune-mongodb mongosh -u admin -p password123 --authenticationDatabase admin dune --eval "print('üìä Statistiques des collections:'); print('Items:', db.items.countDocuments()); print('Chests:', db.chests.countDocuments()); print('Activity Logs:', db.activity_logs.countDocuments()); print('‚úÖ Migration termin√©e avec succ√®s!');"

REM Nettoyer le r√©pertoire de sauvegarde
echo üßπ Nettoyage des fichiers temporaires...
rmdir /s /q %BACKUP_DIR%

echo üéâ Migration des donn√©es termin√©e !
echo ==================================================
